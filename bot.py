#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Telegram –±–æ—Ç –¥–ª—è –∫–∞–Ω–∞–ª–∞ –∏ –≥—Ä—É–ø–ø—ã
"""

import os
import logging
from dotenv import load_dotenv
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, CallbackQueryHandler, filters, ContextTypes

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –∏–∑ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
from commands.start import start_command
from commands.help import help_command
from commands.message_handler import handle_personal_message
from commands.prediction import prediction_command
from commands.hall import hall_command, halllist_command, vote_command
from commands.entertainment import random_command, cat_command, meme_command, casino_command
from commands.pole import pole_command, handle_pole_message
from commands.roast_proof import roast_command, proof_command
from commands.ask import ask_command
from commands.callback_handler import handle_callback_query
from commands.fsm_handler import handle_fsm_message, handle_anon_photo, handle_anon_voice

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
BOT_TOKEN = os.getenv('BOT_TOKEN')
if not BOT_TOKEN:
    raise ValueError("BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")

class TelegramBot:
    def __init__(self):
        self.application = Application.builder().token(BOT_TOKEN).build()
        self.setup_handlers()
    
    def setup_handlers(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π"""
        # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
        self.application.add_handler(CommandHandler("start", start_command))
        self.application.add_handler(CommandHandler("help", help_command))
        
        # –ö–æ–º–∞–Ω–¥—ã —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π
        self.application.add_handler(CommandHandler("prediction", prediction_command))
        self.application.add_handler(CommandHandler("hall", hall_command))
        self.application.add_handler(CommandHandler("halllist", halllist_command))
        self.application.add_handler(CommandHandler("vote", vote_command))
        self.application.add_handler(CommandHandler("random", random_command))
        self.application.add_handler(CommandHandler("cat", cat_command))
        self.application.add_handler(CommandHandler("meme", meme_command))
        self.application.add_handler(CommandHandler("casino", casino_command))
        self.application.add_handler(CommandHandler("pole", pole_command))
        self.application.add_handler(CommandHandler("roast", roast_command))
        self.application.add_handler(CommandHandler("proof", proof_command))
        self.application.add_handler(CommandHandler("ask", ask_command))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback'–æ–≤ –æ—Ç –∫–Ω–æ–ø–æ–∫
        self.application.add_handler(CallbackQueryHandler(handle_callback_query))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ FSM —Å–æ—Å—Ç–æ—è–Ω–∏–π (—Ç–æ–ª—å–∫–æ –¥–ª—è private —á–∞—Ç–æ–≤)
        self.application.add_handler(
            MessageHandler(filters.ChatType.PRIVATE & filters.TEXT & ~filters.COMMAND, 
                         handle_fsm_message)
        )
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞–Ω–æ–Ω–∏–º–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
        self.application.add_handler(
            MessageHandler(filters.ChatType.PRIVATE & filters.PHOTO, handle_anon_photo)
        )
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞–Ω–æ–Ω–∏–º–Ω—ã—Ö –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        self.application.add_handler(
            MessageHandler(filters.ChatType.PRIVATE & filters.VOICE, handle_anon_voice)
        )
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (—Ç–æ–ª—å–∫–æ –¥–ª—è private —á–∞—Ç–æ–≤, –µ—Å–ª–∏ –Ω–µ –≤ FSM)
        self.application.add_handler(
            MessageHandler(filters.ChatType.PRIVATE & filters.TEXT & ~filters.COMMAND, 
                         handle_personal_message)
        )
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∏–≥—Ä—ã –ü–æ–ª–µ —á—É–¥–µ—Å (–¥–ª—è –≥—Ä—É–ø–ø –∏ —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø)
        self.application.add_handler(
            MessageHandler((filters.ChatType.GROUP | filters.ChatType.SUPERGROUP) & filters.TEXT & ~filters.COMMAND, handle_pole_message)
        )
        
        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–í –ö–û–ù–¶–ï, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É)
        self.application.add_handler(
            MessageHandler(filters.ALL, self.log_message)
        )
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
        self.application.add_error_handler(self.error_handler)
    
    async def log_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        chat_type = update.effective_chat.type
        user = update.effective_user
        message_text = update.message.text if update.message else "–ù–µ—Ç —Ç–µ–∫—Å—Ç–∞"
        
        # –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if user:
            user_name = user.first_name or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π"
            username = user.username or "–ù–µ—Ç username"
            logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user_name} (@{username}) –≤ {chat_type}: {message_text}")
        else:
            logger.info(f"–°–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ {chat_type}: {message_text}")
    
    async def error_handler(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è {update}: {context.error}")
        
        # –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        try:
            if update and update.effective_chat:
                await context.bot.send_message(
                    chat_id=update.effective_chat.id,
                    text="üòÖ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!"
                )
        except Exception as e:
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ: {e}")
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        logger.info("–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
        logger.info("–ë–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç:")
        logger.info("- –ö–æ–º–∞–Ω–¥—ã –≤ –∫–∞–Ω–∞–ª–∞—Ö –∏ –≥—Ä—É–ø–ø–∞—Ö")
        logger.info("- –õ–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —É–º–Ω—ã–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏")
        logger.info("- –ú–æ–¥—É–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–æ–º–∞–Ω–¥")
        self.application.run_polling()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        bot = TelegramBot()
        bot.run()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")

if __name__ == '__main__':
    main()
